name: Slack Notification

on:
  pull_request:
    types: [opened, reopened, ready_for_review]
    branches: [ main ]

jobs:
  notify:
    runs-on: ubuntu-latest
    if: github.event.issue.pull_request != null || github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Create temporary package.json
        run: |
          echo '{
            "name": "slack-notification",
            "version": "1.0.0",
            "dependencies": {
              "axios": "^0.21.1",
              "moment-timezone": "^0.5.33"
            }
          }' > temp-package.json

      - name: Install Dependencies
        run: npm install --only=prod --prefix ./temp

      - name: Send Slack Notification
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GIT_TOKEN}}
          script: |
            const fs = require('fs')
            const path = require('path')
            
            const scriptPath = path.join(process.env.GITHUB_WORKSPACE, '.github', 'scripts', 'slack-notification.js')
            const script = fs.readFileSync(scriptPath, 'utf8')
            
            // Add the temp directory to the module search path
            module.paths.unshift(path.join(process.env.GITHUB_WORKSPACE, 'temp', 'node_modules'))
            
            eval(script)
            
            let reviewers = [];
            if (context.payload.pull_request && context.payload.pull_request.requested_reviewers) {
              reviewers = context.payload.pull_request.requested_reviewers.map(reviewer => reviewer.login);
            }
            
            await sendSlackNotification({
              webhook: process.env.SLACK_WEBHOOK_URL,
              context: context,
              reviewers: reviewers,
              customMessage: context.payload.pull_request ? context.payload.pull_request.title : '',
              isManualTrigger: false
            })
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.WEB_HOOK_URL }}
          TIMEZONE: 'Asia/Seoul'
          WORK_HOURS_START: '9'
          WORK_HOURS_END: '18'

      - name: Clean up
        if: always()
        run: rm -rf temp-package.json temp